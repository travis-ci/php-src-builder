language: php

matrix:
  include:
    - sudo: required
      language: minimal
      dist: xenial
      group: edge
      env:
        - RELEASE=xenial
      php: '5.6'
    - sudo: required
      services:
        - docker
      env:
        - RELEASE=trusty
      php: '5.6'
    - sudo: required
      dist: precise
      group: edge
      env:
        - RELEASE=precise
      php: '5.6'
  allow_failures:
    - dist: xenial

env:
  global:
  - VERSION=master ALIAS=nightly
  - ICU_RELEASE=59.1
  - ICU_INSTALL_DIR=$HOME/.phpenv/versions/$VERSION

install:
- sudo apt-get update -qq
- sudo apt-get install expect
- if [[ ! -d $HOME/.php-build ]]; then git clone https://github.com/php-build/php-build.git $HOME/.php-build; fi
- rm -rf $HOME/.phpenv
- git clone 'https://github.com/phpenv/phpenv.git' $HOME/.phpenv
- eval "$($HOME/.phpenv/bin/phpenv init -)"
- pushd $HOME/.php-build
- git reset --hard HEAD
- git checkout master
- git pull
- popd
- if [[ $RELEASE = trusty ]]; then unset ICU_RELEASE; fi # disable ICU installation for Trusty; see https://github.com/travis-ci/travis-ci/issues/3616#issuecomment-286302387
- ./bin/install-icu
- cp default_configure_options.$RELEASE $HOME/.php-build/share/php-build/default_configure_options
- |
  if [[ $VERSION = master ]]; then
    echo "--without-libzip" >> $HOME/.php-build/share/php-build/default_configure_options
  fi
- | # disable xdebug on master
  if [[ $VERSION = master && $RELEASE != xenial ]]; then
    sed -i -e '/install_xdebug_master/d' $HOME/.php-build/share/php-build/definitions/$VERSION
  fi
- |
  if [[ $(lsb_release -cs) = "trusty" ]]; then
    sudo ln /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h
    sudo ln -s /usr/lib/x86_64-linux-gnu/libldap_r.so /usr/lib/libldap_r.so
    sudo ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so
    sudo ln -s /usr/lib/x86_64-linux-gnu/libldap.a /usr/lib/libldap.a
    sudo ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so
  fi

before_script:
- 'export LSB_RELEASE=${LSB_RELEASE:-$(lsb_release -rs || echo ${$(sw_vers -productVersion)%*.*})}'
- 'export OS_NAME=${OS_NAME:-$(lsb_release -is | tr "A-Z" "a-z" || echo "osx")}'
- 'export ARCH=${ARCH:-$(uname -m)}'
- 'export INSTALL_DEST=${INSTALL_DEST:-$HOME/.phpenv/versions}'
- __dots() { while true ; do echo -en . ; sleep 30 ; done } ; __dots &

script:
  - cat $HOME/.php-build/share/php-build/default_configure_options
  - |
    ./bin/compile &&
    (yes '' | ./bin/compile-extension-redis) &&
    (./bin/compile-extension-mongo;
    ./bin/compile-extension-mongodb) &&
    ./bin/compile-extension-amqp &&
    ./bin/compile-extension-apcu &&
    ./bin/compile-extension-zmq &&
    (./bin/compile-extension-memcache;
    ./bin/compile-extension-memcached) &&
    ./bin/compile-extension-ssh2 &&
    sed -i '/^extension=/d' $INSTALL_DEST/$VERSION/etc/php.ini

after_success:
  - ARTIFACTS_KEY='' ARTIFACTS_SECRET='' ARTIFACTS_BUCKET='' ARTIFACTS_PERMISSIONS='' $INSTALL_DEST/$VERSION/bin/php -i
  - $INSTALL_DEST/$VERSION/bin/php -m
  - ldd $INSTALL_DEST/$VERSION/bin/php
  - $INSTALL_DEST/$VERSION/bin/pecl config-show
  - ./bin/archive

after_failure: cat /tmp/php-build.*.log

addons:
  artifacts:
    paths:
    - $LSB_RELEASE/
    target_paths:
    - /binaries/$OS_NAME/$LSB_RELEASE/$ARCH
  apt:
    packages:
      - libcurl4-gnutls-dev
      - libzip-dev

