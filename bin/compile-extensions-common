#!/bin/bash

set -o xtrace

phpenv global $VERSION

travis_time_start() {
  travis_timer_id=$(printf %08x $(( RANDOM * RANDOM )))
  travis_start_time=$(travis_nanoseconds)
  echo -en "travis_time:start:$travis_timer_id\r${ANSI_CLEAR}"
}

travis_time_finish() {
  local result=$?
  travis_end_time=$(travis_nanoseconds)
  local duration=$(($travis_end_time-$travis_start_time))
  echo -en "\ntravis_time:end:$travis_timer_id:start=$travis_start_time,finish=$travis_end_time,duration=$duration\r${ANSI_CLEAR}"
  return $result
}
travis_nanoseconds() {
  local cmd="date"
  local format="+%s%N"
  local os=$(uname)

  $cmd -u $format
}

function pecl_install() {
    extension=$1
    set +o errexit
    pecl info ${extension}
    return=$?
    if [ $return = 0 ] || [ -f "$(pecl config-get ext_dir)/${extension}.so" ]; then
        echo "Extension ${extension} was already installed for PHP ${VERSION}."
    elif [ $return = 1 ]; then
        result=$(pecl install ${extension})
        last_line=$(echo $result | tail -1)
        if [[ "$last_line" =~ failed ]]; then
          echo "There was an error installing extension ${extension} for PHP ${VERSION}:"
          echo "$result"
          set -o errexit
          exit 1
        fi
        set -o errexit
        echo "Extension ${extension} successfully installed for PHP ${VERSION}."
    else
        echo "There was an error installing extension ${extension} for PHP #{VERSION}."
        set -o errexit
        exit 1
    fi
}
