#!/usr/bin/env bash

# Function currently not used, kept around in case we need to fetch a specific version due
# to an upstream packaging issues.
function fetch_pear() {
  set +o errexit
  local tries max_tries
  version=$1

  tries=1
  max_tries=10
  sleep_interval=180

  while [[ $tries -le $max_tries ]]; do
    echo "Try $tries of $max_tries"
    if [ -z $version ]; then
      if [ -n $GITHUB_TOKEN ]; then
        version=$(curl -sSfL --retry 20 -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/pear/pearweb_phars/releases/latest | jq -r .tag_name)
      else
        version=$(curl -sSfL --retry 20 https://api.github.com/repos/pear/pearweb_phars/releases/latest | jq -r .tag_name)
      fi
    fi

    if [ -n $GITHUB_TOKEN ]; then
      curl -sSfL -H "Authorization: token $GITHUB_TOKEN" --retry 20 -O https://raw.githubusercontent.com/pear/pearweb_phars/${version}/go-pear.phar
    else
      curl -sSfL --retry 20 -O https://raw.githubusercontent.com/pear/pearweb_phars/${version}/go-pear.phar
    fi

    if [ -f go-pear.phar ]; then
      break
    fi

    let tries=$tries+1
    echo "Failed to fetch the latest go-pear.phar. Sleeping for ${sleep_interval} seconds."
    sleep $sleep_interval
  done


  if [ ! -f go-pear.phar ]; then
  	echo "Latest PEAR tarball not found"
  	exit 1
  fi
  set -o errexit
}

set -o errexit

if [[ ! $VERSION ]] ; then
  echo 'Missing $VERSION'
  exit 1
fi

if [[ ! $INSTALL_DEST ]] ; then
  echo 'Missing $INSTALL_DEST'
  exit 1
fi

set -o xtrace

export PATH="$HOME/.phpenv/bin:$HOME/.php-build/bin:$PATH"

buildDefinition=${VERSION}
if [[ $VERSION == nightly* || $VERSION == master* ]]; then
    buildDefinition=8.1snapshot
fi

php-build -i development "${buildDefinition}" "${INSTALL_DEST}/${VERSION}"

pushd "${INSTALL_DEST}/${VERSION}"

# update default_cert_file
sudo mkdir -p /usr/local/ssl
sudo wget -O /usr/local/ssl/cert.pem https://curl.haxx.se/ca/cacert.pem

# Fetch latest PEAR phar
curl -fsSL --retry 20 -O http://pear.php.net/go-pear.phar

env TZ=UTC $TRAVIS_BUILD_DIR/bin/install-pear
rm go-pear.phar
"$INSTALL_DEST/$VERSION/bin/pear" config-set php_ini "$INSTALL_DEST/$VERSION/etc/php.ini" system
"$INSTALL_DEST/$VERSION/bin/pear" config-set auto_discover 1

"$INSTALL_DEST/$VERSION/bin/pear" channel-update pear.php.net

# php-fpm
ln -sv ../sbin/php-fpm bin/php-fpm

# composer and phpunit
curl -fsSL -o bin/composer http://getcomposer.org/composer.phar
if [[ $VERSION == nightly* || $VERSION == master* || $VERSION == 7* || $VERSION == 8* ]]; then
	PHPUNIT_ARCHIVE=phpunit.phar
elif [[ $VERSION == 5.6* ]]; then
	PHPUNIT_ARCHIVE=phpunit-5.7.phar
else
	PHPUNIT_ARCHIVE=phpunit-old.phar
fi
curl -fsSL -o bin/phpunit https://phar.phpunit.de/$PHPUNIT_ARCHIVE

chmod +x bin/composer bin/phpunit

popd

mkdir -p "${INSTALL_DEST}/${VERSION}/etc/conf.d"

cat > "${INSTALL_DEST}/${VERSION}/etc/conf.d/travis.ini" <<EOF
memory_limit = 1G
date.timezone = "UTC"
phar.readonly = 0
mysql.default_socket = /var/run/mysqld/mysqld.sock
mysqli.default_socket = /var/run/mysqld/mysqld.sock
pdo_mysql.default_socket = /var/run/mysqld/mysqld.sock
xdebug.max_nesting_level = 256
EOF

if [ $ALIAS ]; then
  pushd ${INSTALL_DEST}
  ln -s ${VERSION} ${ALIAS}
  popd
fi

pushd /tmp

phpenv local "${VERSION}"
phpenv rehash
composer self-update

popd
